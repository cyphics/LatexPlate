//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(LTG_Entity.LTGEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsd1dc8d00313702581e5bdbea8fc3ef0a36241999f6ec20c269661db9d173e3c1))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySetsd1dc8d00313702581e5bdbea8fc3ef0a36241999f6ec20c269661db9d173e3c1 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "d1dc8d00313702581e5bdbea8fc3ef0a36241999f6ec20c269661db9d173e3c1"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "LTGModelStoreContainer.DocType")
            {
                return GetView0();
            }

            if (extentName == "LTGModelStoreContainer.Environment")
            {
                return GetView1();
            }

            if (extentName == "LTGModelStoreContainer.Langue")
            {
                return GetView2();
            }

            if (extentName == "LTGModelStoreContainer.Macro")
            {
                return GetView3();
            }

            if (extentName == "LTGModelStoreContainer.Meta")
            {
                return GetView4();
            }

            if (extentName == "LTGModelStoreContainer.Package")
            {
                return GetView5();
            }

            if (extentName == "LTGModelStoreContainer.Template")
            {
                return GetView6();
            }

            if (extentName == "LTGModelStoreContainer.TemplateEnvironment")
            {
                return GetView7();
            }

            if (extentName == "LTGModelStoreContainer.TemplateMacro")
            {
                return GetView8();
            }

            if (extentName == "LTGModelStoreContainer.TemplateMeta")
            {
                return GetView9();
            }

            if (extentName == "LTGModelStoreContainer.TemplatePackage")
            {
                return GetView10();
            }

            if (extentName == "LTGModelStoreContainer.EnvironmentPackage")
            {
                return GetView11();
            }

            if (extentName == "LTGModelStoreContainer.MacroPackage")
            {
                return GetView12();
            }

            if (extentName == "LTGModelStoreContainer.MetaEnvironment")
            {
                return GetView13();
            }

            if (extentName == "LTGModelStoreContainer.MetaMacro")
            {
                return GetView14();
            }

            if (extentName == "LTGModelStoreContainer.MetaMeta")
            {
                return GetView15();
            }

            if (extentName == "LTGModelStoreContainer.MetaPackage")
            {
                return GetView16();
            }

            if (extentName == "LTGEntities.DocTypes")
            {
                return GetView17();
            }

            if (extentName == "LTGEntities.Environments")
            {
                return GetView18();
            }

            if (extentName == "LTGEntities.Langues")
            {
                return GetView19();
            }

            if (extentName == "LTGEntities.Macroes")
            {
                return GetView20();
            }

            if (extentName == "LTGEntities.Metas")
            {
                return GetView21();
            }

            if (extentName == "LTGEntities.Packages")
            {
                return GetView22();
            }

            if (extentName == "LTGEntities.Templates")
            {
                return GetView23();
            }

            if (extentName == "LTGEntities.TemplateEnvironments")
            {
                return GetView24();
            }

            if (extentName == "LTGEntities.TemplateMacroes")
            {
                return GetView25();
            }

            if (extentName == "LTGEntities.TemplateMetas")
            {
                return GetView26();
            }

            if (extentName == "LTGEntities.TemplatePackages")
            {
                return GetView27();
            }

            if (extentName == "LTGEntities.EnvironmentPackage")
            {
                return GetView28();
            }

            if (extentName == "LTGEntities.MacroPackage")
            {
                return GetView29();
            }

            if (extentName == "LTGEntities.MetaEnvironment")
            {
                return GetView30();
            }

            if (extentName == "LTGEntities.MetaMacro")
            {
                return GetView31();
            }

            if (extentName == "LTGEntities.MetaMeta")
            {
                return GetView32();
            }

            if (extentName == "LTGEntities.MetaPackage")
            {
                return GetView33();
            }

            if (extentName == "LTGModelStoreContainer.ScanDir")
            {
                return GetView34();
            }

            if (extentName == "LTGEntities.ScanDirs")
            {
                return GetView35();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.DocType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocType
        [LTGModel.Store.DocType](T1.DocType_Id, T1.DocType_Nom, T1.DocType_Desc)
    FROM (
        SELECT 
            T.Id AS DocType_Id, 
            T.Nom AS DocType_Nom, 
            T.[Desc] AS DocType_Desc, 
            True AS _from0
        FROM LTGEntities.DocTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.Environment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Environment
        [LTGModel.Store.Environment](T1.Environment_Id, T1.Environment_Nom, T1.Environment_Desc, T1.Environment_CodeBefore, T1.Environment_CodeAfter)
    FROM (
        SELECT 
            T.Id AS Environment_Id, 
            T.Nom AS Environment_Nom, 
            T.[Desc] AS Environment_Desc, 
            T.CodeBefore AS Environment_CodeBefore, 
            T.CodeAfter AS Environment_CodeAfter, 
            True AS _from0
        FROM LTGEntities.Environments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.Langue.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Langue
        [LTGModel.Store.Langue](T1.Langue_Id, T1.Langue_Nom)
    FROM (
        SELECT 
            T.Id AS Langue_Id, 
            T.Nom AS Langue_Nom, 
            True AS _from0
        FROM LTGEntities.Langues AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.Macro.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Macro
        [LTGModel.Store.Macro](T1.Macro_Id, T1.Macro_Nom, T1.Macro_Desc, T1.Macro_Code)
    FROM (
        SELECT 
            T.Id AS Macro_Id, 
            T.Nom AS Macro_Nom, 
            T.[Desc] AS Macro_Desc, 
            T.Code AS Macro_Code, 
            True AS _from0
        FROM LTGEntities.Macroes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.Meta.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Meta
        [LTGModel.Store.Meta](T1.Meta_Id, T1.Meta_Nom, T1.Meta_Desc)
    FROM (
        SELECT 
            T.Id AS Meta_Id, 
            T.Nom AS Meta_Nom, 
            T.[Desc] AS Meta_Desc, 
            True AS _from0
        FROM LTGEntities.Metas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.Package.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Package
        [LTGModel.Store.Package](T1.Package_Id, T1.Package_Nom, T1.Package_Desc)
    FROM (
        SELECT 
            T.Id AS Package_Id, 
            T.Nom AS Package_Nom, 
            T.[Desc] AS Package_Desc, 
            True AS _from0
        FROM LTGEntities.Packages AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.Template.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Template
        [LTGModel.Store.Template](T1.Template_Id, T1.Template_Nom, T1.Template_Desc, T1.Template_LangueID, T1.Template_DocTypeID, T1.Template_Hyperref, T1.Template_Encoding)
    FROM (
        SELECT 
            T.Id AS Template_Id, 
            T.Nom AS Template_Nom, 
            T.[Desc] AS Template_Desc, 
            T.LangueID AS Template_LangueID, 
            T.DocTypeID AS Template_DocTypeID, 
            T.Hyperref AS Template_Hyperref, 
            T.Encoding AS Template_Encoding, 
            True AS _from0
        FROM LTGEntities.Templates AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.TemplateEnvironment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TemplateEnvironment
        [LTGModel.Store.TemplateEnvironment](T1.[TemplateEnvironment.Template_FK], T1.[TemplateEnvironment.Environment_FK], T1.TemplateEnvironment_Comment)
    FROM (
        SELECT 
            T.Template_FK AS [TemplateEnvironment.Template_FK], 
            T.Environment_FK AS [TemplateEnvironment.Environment_FK], 
            T.Comment AS TemplateEnvironment_Comment, 
            True AS _from0
        FROM LTGEntities.TemplateEnvironments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.TemplateMacro.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TemplateMacro
        [LTGModel.Store.TemplateMacro](T1.[TemplateMacro.Template_FK], T1.[TemplateMacro.Macro_FK], T1.TemplateMacro_Comment)
    FROM (
        SELECT 
            T.Template_FK AS [TemplateMacro.Template_FK], 
            T.Macro_FK AS [TemplateMacro.Macro_FK], 
            T.Comment AS TemplateMacro_Comment, 
            True AS _from0
        FROM LTGEntities.TemplateMacroes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.TemplateMeta.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TemplateMeta
        [LTGModel.Store.TemplateMeta](T1.[TemplateMeta.Template_FK], T1.[TemplateMeta.Meta_FK], T1.TemplateMeta_Comment)
    FROM (
        SELECT 
            T.Template_FK AS [TemplateMeta.Template_FK], 
            T.Meta_FK AS [TemplateMeta.Meta_FK], 
            T.Comment AS TemplateMeta_Comment, 
            True AS _from0
        FROM LTGEntities.TemplateMetas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.TemplatePackage.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TemplatePackage
        [LTGModel.Store.TemplatePackage](T1.[TemplatePackage.Template_FK], T1.[TemplatePackage.Package_FK], T1.TemplatePackage_Comment)
    FROM (
        SELECT 
            T.Template_FK AS [TemplatePackage.Template_FK], 
            T.Package_FK AS [TemplatePackage.Package_FK], 
            T.Comment AS TemplatePackage_Comment, 
            True AS _from0
        FROM LTGEntities.TemplatePackages AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.EnvironmentPackage.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EnvironmentPackage
        [LTGModel.Store.EnvironmentPackage](T1.[EnvironmentPackage.Package_FK], T1.[EnvironmentPackage.Environment_FK])
    FROM (
        SELECT 
            Key(T.Package).Id AS [EnvironmentPackage.Package_FK], 
            Key(T.Environment).Id AS [EnvironmentPackage.Environment_FK], 
            True AS _from0
        FROM LTGEntities.EnvironmentPackage AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.MacroPackage.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MacroPackage
        [LTGModel.Store.MacroPackage](T1.[MacroPackage.Package_FK], T1.[MacroPackage.Macro_FK])
    FROM (
        SELECT 
            Key(T.Package).Id AS [MacroPackage.Package_FK], 
            Key(T.Macro).Id AS [MacroPackage.Macro_FK], 
            True AS _from0
        FROM LTGEntities.MacroPackage AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.MetaEnvironment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MetaEnvironment
        [LTGModel.Store.MetaEnvironment](T1.[MetaEnvironment.Environment_FK], T1.[MetaEnvironment.Meta_FK])
    FROM (
        SELECT 
            Key(T.Environment).Id AS [MetaEnvironment.Environment_FK], 
            Key(T.Meta).Id AS [MetaEnvironment.Meta_FK], 
            True AS _from0
        FROM LTGEntities.MetaEnvironment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.MetaMacro.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MetaMacro
        [LTGModel.Store.MetaMacro](T1.[MetaMacro.Macro_FK], T1.[MetaMacro.Meta_FK])
    FROM (
        SELECT 
            Key(T.Macro).Id AS [MetaMacro.Macro_FK], 
            Key(T.Meta).Id AS [MetaMacro.Meta_FK], 
            True AS _from0
        FROM LTGEntities.MetaMacro AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.MetaMeta.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MetaMeta
        [LTGModel.Store.MetaMeta](T1.[MetaMeta.Meta1_FK], T1.[MetaMeta.Meta2_FK])
    FROM (
        SELECT 
            Key(T.Meta).Id AS [MetaMeta.Meta1_FK], 
            Key(T.Meta1).Id AS [MetaMeta.Meta2_FK], 
            True AS _from0
        FROM LTGEntities.MetaMeta AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.MetaPackage.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MetaPackage
        [LTGModel.Store.MetaPackage](T1.[MetaPackage.Package_FK], T1.[MetaPackage.Meta_FK])
    FROM (
        SELECT 
            Key(T.Package).Id AS [MetaPackage.Package_FK], 
            Key(T.Meta).Id AS [MetaPackage.Meta_FK], 
            True AS _from0
        FROM LTGEntities.MetaPackage AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGEntities.DocTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocTypes
        [LTGModel.DocType](T1.DocType_Id, T1.DocType_Nom, T1.DocType_Desc)
    FROM (
        SELECT 
            T.Id AS DocType_Id, 
            T.Nom AS DocType_Nom, 
            T.[Desc] AS DocType_Desc, 
            True AS _from0
        FROM LTGModelStoreContainer.DocType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGEntities.Environments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Environments
        [LTGModel.Environment](T1.Environment_Id, T1.Environment_Nom, T1.Environment_Desc, T1.Environment_CodeBefore, T1.Environment_CodeAfter)
    FROM (
        SELECT 
            T.Id AS Environment_Id, 
            T.Nom AS Environment_Nom, 
            T.[Desc] AS Environment_Desc, 
            T.CodeBefore AS Environment_CodeBefore, 
            T.CodeAfter AS Environment_CodeAfter, 
            True AS _from0
        FROM LTGModelStoreContainer.Environment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGEntities.Langues.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Langues
        [LTGModel.Langue](T1.Langue_Id, T1.Langue_Nom)
    FROM (
        SELECT 
            T.Id AS Langue_Id, 
            T.Nom AS Langue_Nom, 
            True AS _from0
        FROM LTGModelStoreContainer.Langue AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGEntities.Macroes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Macroes
        [LTGModel.Macro](T1.Macro_Id, T1.Macro_Nom, T1.Macro_Desc, T1.Macro_Code)
    FROM (
        SELECT 
            T.Id AS Macro_Id, 
            T.Nom AS Macro_Nom, 
            T.[Desc] AS Macro_Desc, 
            T.Code AS Macro_Code, 
            True AS _from0
        FROM LTGModelStoreContainer.Macro AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGEntities.Metas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Metas
        [LTGModel.Meta](T1.Meta_Id, T1.Meta_Nom, T1.Meta_Desc)
    FROM (
        SELECT 
            T.Id AS Meta_Id, 
            T.Nom AS Meta_Nom, 
            T.[Desc] AS Meta_Desc, 
            True AS _from0
        FROM LTGModelStoreContainer.Meta AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGEntities.Packages.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Packages
        [LTGModel.Package](T1.Package_Id, T1.Package_Nom, T1.Package_Desc)
    FROM (
        SELECT 
            T.Id AS Package_Id, 
            T.Nom AS Package_Nom, 
            T.[Desc] AS Package_Desc, 
            True AS _from0
        FROM LTGModelStoreContainer.Package AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGEntities.Templates.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Templates
        [LTGModel.Template](T1.Template_Id, T1.Template_Nom, T1.Template_Desc, T1.Template_LangueID, T1.Template_DocTypeID, T1.Template_Hyperref, T1.Template_Encoding)
    FROM (
        SELECT 
            T.Id AS Template_Id, 
            T.Nom AS Template_Nom, 
            T.[Desc] AS Template_Desc, 
            T.LangueID AS Template_LangueID, 
            T.DocTypeID AS Template_DocTypeID, 
            T.Hyperref AS Template_Hyperref, 
            T.Encoding AS Template_Encoding, 
            True AS _from0
        FROM LTGModelStoreContainer.Template AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGEntities.TemplateEnvironments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TemplateEnvironments
        [LTGModel.TemplateEnvironment](T1.[TemplateEnvironment.Template_FK], T1.[TemplateEnvironment.Environment_FK], T1.TemplateEnvironment_Comment)
    FROM (
        SELECT 
            T.Template_FK AS [TemplateEnvironment.Template_FK], 
            T.Environment_FK AS [TemplateEnvironment.Environment_FK], 
            T.Comment AS TemplateEnvironment_Comment, 
            True AS _from0
        FROM LTGModelStoreContainer.TemplateEnvironment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGEntities.TemplateMacroes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TemplateMacroes
        [LTGModel.TemplateMacro](T1.[TemplateMacro.Template_FK], T1.[TemplateMacro.Macro_FK], T1.TemplateMacro_Comment)
    FROM (
        SELECT 
            T.Template_FK AS [TemplateMacro.Template_FK], 
            T.Macro_FK AS [TemplateMacro.Macro_FK], 
            T.Comment AS TemplateMacro_Comment, 
            True AS _from0
        FROM LTGModelStoreContainer.TemplateMacro AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGEntities.TemplateMetas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TemplateMetas
        [LTGModel.TemplateMeta](T1.[TemplateMeta.Template_FK], T1.[TemplateMeta.Meta_FK], T1.TemplateMeta_Comment)
    FROM (
        SELECT 
            T.Template_FK AS [TemplateMeta.Template_FK], 
            T.Meta_FK AS [TemplateMeta.Meta_FK], 
            T.Comment AS TemplateMeta_Comment, 
            True AS _from0
        FROM LTGModelStoreContainer.TemplateMeta AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGEntities.TemplatePackages.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TemplatePackages
        [LTGModel.TemplatePackage](T1.[TemplatePackage.Template_FK], T1.[TemplatePackage.Package_FK], T1.TemplatePackage_Comment)
    FROM (
        SELECT 
            T.Template_FK AS [TemplatePackage.Template_FK], 
            T.Package_FK AS [TemplatePackage.Package_FK], 
            T.Comment AS TemplatePackage_Comment, 
            True AS _from0
        FROM LTGModelStoreContainer.TemplatePackage AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGEntities.EnvironmentPackage.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EnvironmentPackage
        [LTGModel.EnvironmentPackage](T3.EnvironmentPackage_Environment, T3.EnvironmentPackage_Package)
    FROM (
        SELECT -- Constructing Environment
            CreateRef(LTGEntities.Environments, row(T2.EnvironmentPackage_Environment_Id), [LTGModel.Environment]) AS EnvironmentPackage_Environment, 
            T2.EnvironmentPackage_Package
        FROM (
            SELECT -- Constructing Package
                T1.EnvironmentPackage_Environment_Id, 
                CreateRef(LTGEntities.Packages, row(T1.EnvironmentPackage_Package_Id), [LTGModel.Package]) AS EnvironmentPackage_Package
            FROM (
                SELECT 
                    T.Environment_FK AS EnvironmentPackage_Environment_Id, 
                    T.Package_FK AS EnvironmentPackage_Package_Id, 
                    True AS _from0
                FROM LTGModelStoreContainer.EnvironmentPackage AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for LTGEntities.MacroPackage.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MacroPackage
        [LTGModel.MacroPackage](T3.MacroPackage_Macro, T3.MacroPackage_Package)
    FROM (
        SELECT -- Constructing Macro
            CreateRef(LTGEntities.Macroes, row(T2.MacroPackage_Macro_Id), [LTGModel.Macro]) AS MacroPackage_Macro, 
            T2.MacroPackage_Package
        FROM (
            SELECT -- Constructing Package
                T1.MacroPackage_Macro_Id, 
                CreateRef(LTGEntities.Packages, row(T1.MacroPackage_Package_Id), [LTGModel.Package]) AS MacroPackage_Package
            FROM (
                SELECT 
                    T.Macro_FK AS MacroPackage_Macro_Id, 
                    T.Package_FK AS MacroPackage_Package_Id, 
                    True AS _from0
                FROM LTGModelStoreContainer.MacroPackage AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for LTGEntities.MetaEnvironment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MetaEnvironment
        [LTGModel.MetaEnvironment](T3.MetaEnvironment_Environment, T3.MetaEnvironment_Meta)
    FROM (
        SELECT -- Constructing Environment
            CreateRef(LTGEntities.Environments, row(T2.MetaEnvironment_Environment_Id), [LTGModel.Environment]) AS MetaEnvironment_Environment, 
            T2.MetaEnvironment_Meta
        FROM (
            SELECT -- Constructing Meta
                T1.MetaEnvironment_Environment_Id, 
                CreateRef(LTGEntities.Metas, row(T1.MetaEnvironment_Meta_Id), [LTGModel.Meta]) AS MetaEnvironment_Meta
            FROM (
                SELECT 
                    T.Environment_FK AS MetaEnvironment_Environment_Id, 
                    T.Meta_FK AS MetaEnvironment_Meta_Id, 
                    True AS _from0
                FROM LTGModelStoreContainer.MetaEnvironment AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for LTGEntities.MetaMacro.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MetaMacro
        [LTGModel.MetaMacro](T3.MetaMacro_Macro, T3.MetaMacro_Meta)
    FROM (
        SELECT -- Constructing Macro
            CreateRef(LTGEntities.Macroes, row(T2.MetaMacro_Macro_Id), [LTGModel.Macro]) AS MetaMacro_Macro, 
            T2.MetaMacro_Meta
        FROM (
            SELECT -- Constructing Meta
                T1.MetaMacro_Macro_Id, 
                CreateRef(LTGEntities.Metas, row(T1.MetaMacro_Meta_Id), [LTGModel.Meta]) AS MetaMacro_Meta
            FROM (
                SELECT 
                    T.Macro_FK AS MetaMacro_Macro_Id, 
                    T.Meta_FK AS MetaMacro_Meta_Id, 
                    True AS _from0
                FROM LTGModelStoreContainer.MetaMacro AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for LTGEntities.MetaMeta.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MetaMeta
        [LTGModel.MetaMeta](T3.MetaMeta_Meta, T3.MetaMeta_Meta1)
    FROM (
        SELECT -- Constructing Meta
            CreateRef(LTGEntities.Metas, row(T2.MetaMeta_Meta_Id), [LTGModel.Meta]) AS MetaMeta_Meta, 
            T2.MetaMeta_Meta1
        FROM (
            SELECT -- Constructing Meta1
                T1.MetaMeta_Meta_Id, 
                CreateRef(LTGEntities.Metas, row(T1.MetaMeta_Meta1_Id), [LTGModel.Meta]) AS MetaMeta_Meta1
            FROM (
                SELECT 
                    T.Meta1_FK AS MetaMeta_Meta_Id, 
                    T.Meta2_FK AS MetaMeta_Meta1_Id, 
                    True AS _from0
                FROM LTGModelStoreContainer.MetaMeta AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for LTGEntities.MetaPackage.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MetaPackage
        [LTGModel.MetaPackage](T3.MetaPackage_Meta, T3.MetaPackage_Package)
    FROM (
        SELECT -- Constructing Meta
            CreateRef(LTGEntities.Metas, row(T2.MetaPackage_Meta_Id), [LTGModel.Meta]) AS MetaPackage_Meta, 
            T2.MetaPackage_Package
        FROM (
            SELECT -- Constructing Package
                T1.MetaPackage_Meta_Id, 
                CreateRef(LTGEntities.Packages, row(T1.MetaPackage_Package_Id), [LTGModel.Package]) AS MetaPackage_Package
            FROM (
                SELECT 
                    T.Meta_FK AS MetaPackage_Meta_Id, 
                    T.Package_FK AS MetaPackage_Package_Id, 
                    True AS _from0
                FROM LTGModelStoreContainer.MetaPackage AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for LTGModelStoreContainer.ScanDir.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView34()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ScanDir
        [LTGModel.Store.ScanDir](T1.ScanDir_Id, T1.ScanDir_Path)
    FROM (
        SELECT 
            T.Id AS ScanDir_Id, 
            T.Path AS ScanDir_Path, 
            True AS _from0
        FROM LTGEntities.ScanDirs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for LTGEntities.ScanDirs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView35()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ScanDirs
        [LTGModel.ScanDir](T1.ScanDir_Id, T1.ScanDir_Path)
    FROM (
        SELECT 
            T.Id AS ScanDir_Id, 
            T.Path AS ScanDir_Path, 
            True AS _from0
        FROM LTGModelStoreContainer.ScanDir AS T
    ) AS T1");
        }
    }
}
